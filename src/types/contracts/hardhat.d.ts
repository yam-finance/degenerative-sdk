/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "Lockable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Lockable__factory>;
    getContractFactory(
      name: "Testable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Testable__factory>;
    getContractFactory(
      name: "Timer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Timer__factory>;
    getContractFactory(
      name: "ExpandedIERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExpandedIERC20__factory>;
    getContractFactory(
      name: "IERC20Standard",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Standard__factory>;
    getContractFactory(
      name: "FeePayer",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeePayer__factory>;
    getContractFactory(
      name: "LinearLongShortPairFinancialProductLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LinearLongShortPairFinancialProductLibrary__factory>;
    getContractFactory(
      name: "ExpiringContractInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExpiringContractInterface__factory>;
    getContractFactory(
      name: "LongShortPairFinancialProductLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LongShortPairFinancialProductLibrary__factory>;
    getContractFactory(
      name: "ExpiringContractInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExpiringContractInterface__factory>;
    getContractFactory(
      name: "FinancialProductLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FinancialProductLibrary__factory>;
    getContractFactory(
      name: "ExpiringMultiParty",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExpiringMultiParty__factory>;
    getContractFactory(
      name: "Liquidatable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Liquidatable__factory>;
    getContractFactory(
      name: "PricelessPositionManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.PricelessPositionManager__factory>;
    getContractFactory(
      name: "Greeter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Greeter__factory>;
    getContractFactory(
      name: "ExpiringMultiPartyMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExpiringMultiPartyMock__factory>;
    getContractFactory(
      name: "OracleInterfaces",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleInterfaces__factory>;
    getContractFactory(
      name: "AdministrateeInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AdministrateeInterface__factory>;
    getContractFactory(
      name: "FinderInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FinderInterface__factory>;
    getContractFactory(
      name: "IdentifierWhitelistInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IdentifierWhitelistInterface__factory>;
    getContractFactory(
      name: "OptimisticOracleInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OptimisticOracleInterface__factory>;
    getContractFactory(
      name: "OracleInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OracleInterface__factory>;
    getContractFactory(
      name: "StoreInterface",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StoreInterface__factory>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
  }
}
