/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  LinearLongShortPairFinancialProductLibrary,
  LinearLongShortPairFinancialProductLibraryInterface,
} from "../LinearLongShortPairFinancialProductLibrary";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "longShortPairParameters",
    outputs: [
      {
        internalType: "int256",
        name: "upperBound",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "lowerBound",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "expiryPrice",
        type: "int256",
      },
    ],
    name: "percentageLongCollateralAtExpiry",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "longShortPair",
        type: "address",
      },
      {
        internalType: "int256",
        name: "upperBound",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "lowerBound",
        type: "int256",
      },
    ],
    name: "setLongShortPairParameters",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506000805460ff191660011790556106468061002d6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806325110946146100465780632da523611461005b5780639299cbed14610084575b600080fd5b610059610054366004610410565b6100a5565b005b61006e610069366004610442565b610209565b60405161007b9190610573565b60405180910390f35b6100976100923660046103f6565b6102e9565b60405161007b929190610472565b6100ad610302565b6100b5610326565b826001600160a01b0316639f43ddd26040518163ffffffff1660e01b815260040160206040518083038186803b1580156100ee57600080fd5b505afa158015610102573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610126919061045a565b61014b5760405162461bcd60e51b81526004016101429061050f565b60405180910390fd5b80821361016a5760405162461bcd60e51b8152600401610142906104b0565b6001600160a01b03831660009081526001602081815260409283902083518085019094528054808552920154908301521580156101a957506020810151155b6101c55760405162461bcd60e51b815260040161014290610480565b5060408051808201825283815260208082018481526001600160a01b038716600090815260019283905293909320915182559151910155610204610332565b505050565b6000610213610302565b33600090815260016020818152604092839020835180850190945280548085529201549083015215158061024a5750602081015115155b6102665760405162461bcd60e51b8152600401610142906104d8565b80518312610282576102786001610341565b5191506102e49050565b80602001518313610297576102786000610341565b6102df6040518060200160405280836020015184600001516102b991906105bb565b81525060405180602001604052808460200151876102d791906105bb565b90529061036f565b519150505b919050565b6001602081905260009182526040909120805491015482565b60005460ff166103245760405162461bcd60e51b81526004016101429061053c565b565b6000805460ff19169055565b6000805460ff19166001179055565b6103496103cc565b60408051602081019091528061036784670de0b6b3a76400006103ad565b905292915050565b6103776103cc565b60408051602081019091528251845182916103a49161039e90670de0b6b3a76400006103ad565b906103c0565b90529392505050565b60006103b9828461059c565b9392505050565b60006103b9828461057c565b6040518060200160405280600081525090565b80356001600160a01b03811681146102e457600080fd5b600060208284031215610407578081fd5b6103b9826103df565b600080600060608486031215610424578182fd5b61042d846103df565b95602085013595506040909401359392505050565b600060208284031215610453578081fd5b5035919050565b60006020828403121561046b578081fd5b5051919050565b918252602082015260400190565b60208082526016908201527514185c985b595d195c9cc8185b1c9958591e481cd95d60521b604082015260600190565b6020808252600e908201526d496e76616c696420626f756e647360901b604082015260600190565b6020808252601e908201527f506172616d73206e6f742073657420666f722063616c6c696e67204c53500000604082015260600190565b602080825260139082015272496e76616c6964204c5350206164647265737360681b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b90815260200190565b60008261059757634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156105b6576105b66105fa565b500290565b60008083128015600160ff1b8501841216156105d9576105d96105fa565b6001600160ff1b03840183138116156105f4576105f46105fa565b50500390565b634e487b7160e01b600052601160045260246000fdfea264697066735822122055e7ffbda752fa6680722bc0b992226b799a0701005dcc269a18653be16ccbd864736f6c63430008000033";

export class LinearLongShortPairFinancialProductLibrary__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LinearLongShortPairFinancialProductLibrary> {
    return super.deploy(
      overrides || {}
    ) as Promise<LinearLongShortPairFinancialProductLibrary>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LinearLongShortPairFinancialProductLibrary {
    return super.attach(address) as LinearLongShortPairFinancialProductLibrary;
  }
  connect(signer: Signer): LinearLongShortPairFinancialProductLibrary__factory {
    return super.connect(
      signer
    ) as LinearLongShortPairFinancialProductLibrary__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LinearLongShortPairFinancialProductLibraryInterface {
    return new utils.Interface(
      _abi
    ) as LinearLongShortPairFinancialProductLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LinearLongShortPairFinancialProductLibrary {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LinearLongShortPairFinancialProductLibrary;
  }
}
